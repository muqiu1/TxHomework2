{"version":3,"sources":["fromPage/checkbox.tsx","fromPage/select.tsx","fromPage/slide.tsx","fromPage/input.tsx","fromPage/switch.tsx","fromPage/tip.tsx","fromPage/index.tsx","reportWebVitals.ts","index.tsx"],"names":["CheckBox","item","callback","useState","isCheck","setIsCheck","useEffect","value","className","onChange","e","target","checked","key","type","Select","props","Slide","onMouseDown","outOffsetLeft","document","querySelector","slide","mark","onmousemove","slideWidth","clientX","offsetLeft","style","width","left","Math","floor","onMouseUp","Input","setValue","placeholder","onClick","Switch","dom","faDom","backgroundColor","top","Tip","console","log","timer","setTimeout","checkBoxArray","checkBoxList","FormPage","checkedList","setCheckedList","selectData","seSelectData","showTip","setShowTip","slideValue","setSlideValue","inputValue","setInputValue","switchValue","setSwitchValue","showData","setShowData","map","includes","push","length","splice","findIndex","checkbox","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.37b56fef.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react';\n\n\nconst CheckBox:React.FC<any> = ({item,callback})=>{\nconst [isCheck,setIsCheck] = useState(false)\nuseEffect(()=>{\n  setIsCheck(item.value)\n},[])\n  return (\n    <div className='check-box'>\n      \n      <label>\n      \n      <input onChange={(e)=>{\n          callback({isCheck:e.target.checked,key:item.key});\n          setIsCheck(e.target.checked);\n      }} type='checkbox' checked={isCheck} />\n      {item.key}\n      </label>\n    </div>\n  )\n}\n\n\nexport default CheckBox;","\nconst Select = (props:any)=>{\n  return (\n    \n    <select className='my-select'  onChange={(e)=>{\n      \n      props.callback(e.target.value)\n    }}>\n      <option>橘子</option>\n      <option>苹果</option>\n      <option>梨子</option>\n\n    </select>\n  )\n}\n\nexport default Select;","\n\n\nconst Slide = (props:any)=>{\n  return (\n    <div className='slide-wrapper'>\n      <div onMouseDown={()=>{\n        const outOffsetLeft = document.querySelector('.out-box') as HTMLElement;\n        const slide = document.querySelector('.slide') as HTMLElement;\n        const mark = document.querySelector('.mark') as HTMLElement;\n        document.onmousemove=(e)=>{\n          let slideWidth = e.clientX - outOffsetLeft.offsetLeft ;\n          if(slideWidth>=300){\n            slide.style.width='300px';\n            mark.style.left='290px';\n          }else if(slideWidth<=0){\n            slide.style.width='0px';\n            mark.style.left='1px';\n          }else{\n            slide.style.width=slideWidth +'px';\n            mark.style.left=slideWidth+'px';\n          }\n          props.callback(Math.floor(slideWidth/300*100))\n        }\n      }} \n      onMouseUp={()=>{\n        document.onmousemove=()=>null;\n      }}\n      className='out-box'>\n        <div className='slide'></div>\n        <div  className='mark'></div>\n      </div>      \n    </div>\n  )\n}\n\n\nexport default Slide;\n","import {useState} from 'react';\n\n\nconst Input = (props:any)=>{\n  const [value,setValue] = useState('')\n  return (\n    <div className='input-wrapper'>\n      <input placeholder='输入内容后出现清除按钮' onChange={(e)=>{\n        setValue(e.target.value);\n        props.callback(e.target.value);\n      }} value={value} />\n      {value && <div onClick={()=>{\n        setValue('')\n      }} className='clear-icon'></div>}\n    </div>\n  )\n}\n\nexport default Input;","\n\n\n\nconst Switch = (props:any)=>{\n  return (\n    <div className='switch-wrapper'>\n      <div onClick={()=>{\n        let dom = document.querySelector('.scroll-bar') as HTMLElement;\n        let faDom = document.querySelector('.switch-wrapper') as HTMLElement;\n        if(!dom.style.left||dom.style.left==='0px'){\n          dom.style.left = '15px';\n          dom.style.top = '2px';\n          faDom.style.backgroundColor = '#2f5fd3';\n          props.callback(true);\n        }else{\n          dom.style.left='0px';\n          faDom.style.backgroundColor = '#eee';\n          props.callback(false);\n        }\n        \n      }} className='scroll-bar'></div>\n    </div>\n  )\n}\n\n\nexport default Switch;","import {useEffect} from 'react';\n\n\nconst Tip = (props:any)=>{\n  console.log(props);\n  useEffect(()=>{\n    let timer:any = setTimeout(() => {\n      props.callback();\n    }, 3000);\n    return ()=>{\n      timer=null;\n      console.log(timer);\n    }\n  },[])\n  return (\n    <div className='tip-wrapper'>\n      <div className='right-icon'></div>\n      提交成功，即将更新右侧\n      <div onClick={()=>{\n        props.callback();\n      }} className='tip-icon'></div>\n      \n      </div>\n  )\n}\n\nexport default Tip;","import {useState} from 'react';\nimport './index.css';\nimport CheckBox from './checkbox';\nimport Select from './select';\nimport Slide from './slide';\nimport Input from './input';\nimport Switch from './switch';\nimport Tip from './tip';\nlet checkBoxArray:any[] = []\nconst checkBoxList = [\n  {key:'数学',value:false},\n  {key:'语文',value:false},\n  {key:'英语',value:false}\n]\nconst FormPage = ()=>{\n  const [checkedList,setCheckedList] = useState<any[]>([]);\n  const [selectData,seSelectData] = useState('橘子');\n  const [showTip,setShowTip]=useState(false);\n  const [slideValue,setSlideValue] = useState(0);\n  const [inputValue,setInputValue] = useState('');\n  const [switchValue,setSwitchValue] = useState(false);\n  const [showData,setShowData] = useState<any>(null);\n  return (\n    <div className='form-page'>\n      <div className='page-left'>\n      <header>\n        <h1>代码示范列子</h1>\n        </header>\n        <div className='checkbox-title'>checkbox多选：</div>\n       {\n         checkBoxList.map(item=>{\n           return <CheckBox\n                    callback={(e:any)=>{\n                      if(e.isCheck && !checkBoxArray.includes(e.key)  ){\n                        checkBoxArray.push(e.key);\n                      }else{\n                        checkBoxArray.length&&\n                        checkBoxArray.splice(checkBoxArray.findIndex(item=>item===e.key),1);\n                      }\n                      setCheckedList(checkBoxArray);\n                    }}\n                    key={item.key} \n                    item={item} />\n         })\n       }\n       <div className='select-title'>Select多选框：</div>\n       <Select callback={(e:any)=>{\n         seSelectData(e)\n       }} />\n       <div className='slide-title'>Slide进度条（可拖动）：</div>\n       <Slide callback={(e:any)=>{\n         setSlideValue(e);\n       }} />\n       <div className='input-title'>input输入后可清除：</div>\n       <Input callback={(e:any)=>{\n         setInputValue(e);\n       }} />\n       <div className='switch-title'>switch开关：</div>\n       <Switch callback={(e:any)=>{\n         console.log(e);\n         setSwitchValue(e)\n       }} />\n       <div onClick={()=>{\n         setShowTip(true);\n         let params={\n          checkbox:checkedList,\n          selectData,\n          slide:slideValue,\n          inputValue,\n          switchValue\n         };\n         setShowData(params);\n         }} className='btn'>提交</div>\n       <div className='text'>点击提交后，会进行snackbar提示</div>\n      </div>\n      {showData && <div className='page-right'>\n        <div className='checkbox-title'>checkbox多选：</div>\n        {showData.checkbox.map((item:any)=>{\n          return <span key={item}>{item}</span>\n        })}\n        <div className='select-title'>Select多选框：</div>\n        <span>{showData.selectData}</span>\n        <div className='slide-title'>Slide进度条（可拖动）：</div>\n        <span>{showData.slide}</span>\n        <div className='input-title'>input输入后可清除：</div>\n        <span>{showData.inputValue}</span>\n        <div className='switch-title'>switch开关：</div>\n        <span>{`${showData.switchValue}`}</span> \n      </div>}\n     {showTip&& <Tip callback={()=>{\n       setShowTip(false)\n     }} />}\n    </div>\n  )\n}\n\nexport default FormPage;","const reportWebVitals = (onPerfEntry:any) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './fromPage/index'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//@ts-ignore\nreportWebVitals();\n"],"sourceRoot":""}