{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Option","Select","formItemLayout","labelCol","span","style","wrapperCol","Demo","useState","isShow","useisShow","showData","useshowData","formLayout","className","name","layout","onFinish","values","message","success","console","log","setTimeout","Item","label","Group","value","lineHeight","hasFeedback","placeholder","allowClear","offset","type","htmlType","block","join","select","slider","input","switch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"iTAeQA,EAAWC,IAAXD,OACFE,EAAiB,CACrBC,SAAU,CACRC,KAAM,GACNC,MAAM,CACJ,WAAc,OACd,SAAY,SAGhBC,WAAY,CACVF,KAAM,KAgIKG,EA5HF,WACX,MAA0BC,oBAAS,GAAnC,mBAAKC,EAAL,KAAaC,EAAb,KACA,EAA8BF,mBAAS,IAAvC,mBAAKG,EAAL,KAAeC,EAAf,KACA,EAAoCJ,mBAAS,YAA7C,mBAAOK,EAAP,UAYA,OACE,sBAAKC,UAAU,YAAf,UACA,eAAC,IAAD,yBACEC,KAAK,iBACLD,UAAW,UACPZ,GAHN,IAIEc,OAAQH,EACRI,SAlBa,SAACC,GAChBC,IAAQC,QAAQ,sEAChBC,QAAQC,IAAIJ,GACZK,YAAW,WACTb,GAAU,GACVE,EAAYM,KACZ,MAOF,UAOG,cAAC,IAAKM,KAAN,CAAWT,KAAK,iBAAiBU,MAAM,iBAAvC,SACC,cAAC,IAASC,MAAV,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKtB,KAAM,EAAX,SACE,cAAC,IAAD,CACEuB,MAAM,eACNtB,MAAO,CACLuB,WAAY,QAHhB,4BASF,cAAC,IAAD,CAAKxB,KAAM,EAAX,SACE,cAAC,IAAD,CACEuB,MAAM,eACNtB,MAAO,CACLuB,WAAY,QAHhB,4BASF,cAAC,IAAD,CAAKxB,KAAM,EAAX,SACE,cAAC,IAAD,CACEuB,MAAM,eACNtB,MAAO,CACLuB,WAAY,QAHhB,mCAcR,cAAC,IAAKJ,KAAN,CACET,KAAK,SACLU,MAAM,SACNI,aAAW,EAHb,SAME,eAAC,IAAD,CAAQC,YAAY,eAApB,UACE,cAAC9B,EAAD,CAAQ2B,MAAM,eAAd,0BACA,cAAC3B,EAAD,CAAQ2B,MAAM,eAAd,0BACA,cAAC3B,EAAD,CAAQ2B,MAAM,eAAd,+BAIJ,cAAC,IAAKH,KAAN,CAAWT,KAAK,SAASU,MAAM,SAA/B,SACE,cAAC,IAAD,MAGF,cAAC,IAAKD,KAAN,CAAWT,KAAK,QAAQU,MAAM,6CAA9B,SACE,cAAC,IAAD,CAAOM,YAAU,MAGnB,cAAC,IAAKP,KAAN,CAAWT,KAAK,SAASU,MAAM,6CAA/B,SACE,cAAC,IAAD,MAGF,cAAC,IAAKD,KAAN,CACElB,WAAY,CACVF,KAAM,GACN4B,OAAQ,GAHZ,SAME,cAAC,IAAD,CAAQC,KAAK,UAAUC,SAAS,SAASC,OAAK,EAAC9B,MAAO,CAAC,MAAQ,QAA/D,gCAMLI,EAAS,sBAAKK,UAAU,OAAf,UACR,gCACE,sDACCH,EAAS,kBAAmBA,EAAS,kBAAkByB,KAAK,KAAM,MAErE,gCACE,oDACCzB,EAAS0B,UAEZ,gCACE,2EACC1B,EAAS2B,UAEZ,gCACE,iFACC3B,EAAS4B,SAEZ,gCACE,oDACC5B,EAAS6B,OAAO,SAEb,SCzIKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAGhDZ,M","file":"static/js/main.202e3ee5.chunk.js","sourcesContent":["import './App.css';\nimport {\n  Form,\n  Select,\n  Input,\n  Switch,\n  Slider,\n  Button,\n  Checkbox,\n  Row,\n  Col,\n  message\n} from 'antd';\nimport React, { useState } from 'react';\n\nconst { Option } = Select;\nconst formItemLayout = {\n  labelCol: {\n    span: 15,\n    style:{\n      'fontWeight': 'bold',\n      'fontSize': '50px'\n    }\n  },\n  wrapperCol: {\n    span: 20,\n  },\n};\n\nconst Demo = () => {\n  let [isShow, useisShow] = useState(false);\n  let [showData, useshowData] = useState({});\n  const [formLayout, setFormLayout] = useState('vertical');\n  const onFinish = (values) => {\n    message.success('提交成功，即将更新右侧');\n    console.log(values);\n    setTimeout(() => {\n      useisShow(true);\n      useshowData(values);\n    },1000)\n    \n    \n  };\n\n  return (\n    <div className=\"container\">\n    <Form\n      name=\"validate_other\"\n      className={\"source\"}\n      {...formItemLayout}\n      layout={formLayout}\n      onFinish={onFinish}\n    >\n       <Form.Item name=\"checkbox-group\" label=\"Checkbox.Group\">\n        <Checkbox.Group>\n          <Row>\n            <Col span={8}>\n              <Checkbox\n                value=\"数学\"\n                style={{\n                  lineHeight: '32px',\n                }}\n              >\n                数学\n              </Checkbox>\n            </Col>\n            <Col span={8}>\n              <Checkbox\n                value=\"英语\"\n                style={{\n                  lineHeight: '32px',\n                }}\n              >\n                英语\n              </Checkbox>\n            </Col>\n            <Col span={8}>\n              <Checkbox\n                value=\"语文\"\n                style={{\n                  lineHeight: '32px',\n                }}\n              >\n                语文\n              </Checkbox>\n            </Col>\n           \n          </Row>\n        </Checkbox.Group>\n      </Form.Item>\n      \n      <Form.Item\n        name=\"select\"\n        label=\"Select\"\n        hasFeedback\n        \n      >\n        <Select placeholder=\"橘子\">\n          <Option value=\"橘子\">橘子</Option>\n          <Option value=\"橙子\">橙子</Option>\n          <Option value=\"苹果\">苹果</Option>\n        </Select>\n      </Form.Item>\n\n      <Form.Item name=\"slider\" label=\"Slider\">\n        <Slider\n        />\n      </Form.Item>\n      <Form.Item name=\"input\" label=\"输入后，可清除\">\n        <Input allowClear />\n      </Form.Item>\n      \n      <Form.Item name=\"switch\" label=\"输入后，可清除\">\n        <Switch />\n      </Form.Item>\n\n      <Form.Item\n        wrapperCol={{\n          span: 12,\n          offset: 6,\n        }}\n      >\n        <Button type=\"primary\" htmlType=\"submit\" block style={{'width':'100%'}}>\n          提交\n        </Button>\n      </Form.Item>\n    </Form>\n \n  {isShow ? <div className=\"show\">\n    <div>\n      <p>checkBox 多选</p>\n      {showData['checkbox-group']? showData['checkbox-group'].join(','): ''}\n    </div>\n    <div>\n      <p>Select 多选</p>\n      {showData.select}\n    </div>\n    <div>\n      <p>Slide 进度条可拖动</p>\n      {showData.slider}\n    </div>\n    <div>\n      <p>input 输入后可以清除</p>\n      {showData.input}\n    </div>\n    <div>\n      <p>switch 开关</p>\n      {showData.switch+''}\n    </div>\n  </div>: null}\n  </div>\n)};\n\nexport default Demo;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}